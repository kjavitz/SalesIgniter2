<?php

/**
 * PhotoGalleryCategoriesDescription
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 6401 2009-09-24 16:12:04Z guilhermeblanco $
 */
class PhotoGalleryCategoriesDescription extends Doctrine_Record {

	public function setUp(){
		$this->setUpParent();
		
		$this->setAttribute(Doctrine::ATTR_COLL_KEY, 'language_id');
		
		$this->hasOne('PhotoGalleryCategories', array(
			'local' => 'categories_id',
			'foreign' => 'categories_id'
		));
	}
	
	public function setUpParent(){
		$Categories = Doctrine_Core::getTable('PhotoGalleryCategories')->getRecordInstance();
		
		$Categories->hasMany('PhotoGalleryCategoriesDescription', array(
			'local' => 'categories_id',
			'foreign' => 'categories_id',
			'cascade' => array('delete')
		));
	}
	
	public function setTableDefinition(){
		$this->setTableName('photo_gallery_categories_description');
		
		$this->hasColumn('categories_id', 'integer', 4, array(
			'type'          => 'integer',
			'length'        => 4,
			'unsigned'      => 0,
			'primary'       => false,
			'autoincrement' => false
		));
		
		$this->hasColumn('language_id', 'integer', 4, array(
			'type'          => 'integer',
			'length'        => 4,
			'unsigned'      => 0,
			'primary'       => false,
			'default'       => '1',
			'autoincrement' => false
		));
		
		$this->hasColumn('categories_title', 'string', 255, array(
			'type'          => 'string',
			'length'        => 255,
			'fixed'         => false,
			'primary'       => false,
			'default'       => '',
			'notnull'       => true,
			'autoincrement' => false
		));
		
		$this->hasColumn('categories_description_text', 'string', null, array(
			'type'          => 'string',
			'fixed'         => false,
			'primary'       => false,
			'notnull'       => false,
			'autoincrement' => false
		));


	}
	public function newLanguageProcess($fromLangId, $toLangId){
		$Qdescription = Doctrine_Query::create()
		->from('PhotoGalleryCategoriesDescription')
		->where('language_id = ?', (int) $fromLangId)
		->execute(array(), Doctrine_Core::HYDRATE_ARRAY);
		foreach($Qdescription as $Record){
			$toTranslate = array(
				'categories_title' => $Record['categories_title'],
				'categories_description_text' => $Record['categories_description_text']
			);

			EventManager::notify('PhotoGalleryCategoriesDescriptionNewLanguageProcessBeforeTranslate', $toTranslate);

			$translated = sysLanguage::translateText($toTranslate, (int) $toLangId, (int) $fromLangId);

			$newDesc = new BlogCategoriesDescription();
			$newDesc->categories_id = $Record['categories_id'];
			$newDesc->language_id = (int) $toLangId;
			$newDesc->categories_title = $translated['categories_title'];
			$newDesc->categories_description_text = $translated['categories_description_text'];

			EventManager::notify('PhotoGalleryCategoriesDescriptionNewLanguageProcessBeforeSave', $newDesc);

			$newDesc->save();
		}
	}

	public function cleanLanguageProcess($existsId){
		Doctrine_Query::create()
		->delete('PhotoGalleryCategoriesDescription')
		->whereNotIn('language_id', $existsId)
		->execute();
	}

	public function deleteLanguageProcess($langId){
		Doctrine_Query::create()
		->delete('PhotoGalleryCategoriesDescription')
		->where('language_id = ?', (int) $langId)
		->execute();
	}
}