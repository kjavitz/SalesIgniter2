<?php

/**
 * TemplateManagerLayouts
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @property integer $template_id
 * @property integer $layout_id
 * @property TemplateManagerTemplates $TemplateManagerTemplates
 * @property TemplateManagerLayoutsContainers $Containers
 * @property Doctrine_Collection $Configuration
 * @property Doctrine_Collection $Styles
 *
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class TemplateManagerLayouts extends Doctrine_Record
{
	public function setTableDefinition()
	{
		$this->setTableName('template_manager_layouts');
		$this->hasColumn('template_id', 'integer', 4, array(
			'type' => 'integer',
			'length' => 4,
		));
		$this->hasColumn('layout_id', 'integer', 4, array(
			'primary' => true,
			'type' => 'integer',
			'autoincrement' => true,
			'length' => 4,
		));
		$this->hasColumn('layout_name', 'string', 128, array(
				'type' => 'string',
				'length' => 128,
			));
		$this->hasColumn('layout_type', 'string', 128, array(
			'type' => 'string',
			'length' => 128,
			'default' => 'desktop'
		));
		$this->hasColumn('page_type', 'string', 128, array(
			'type' => 'string',
			'length' => 128,
			'default' => 'template'
		));
		$this->hasColumn('app_name', 'string', 128, array(
			'type' => 'string',
			'length' => 128,
			'default' => ''
		));
		$this->hasColumn('app_page_name', 'string', 128, array(
			'type' => 'string',
			'length' => 128,
			'default' => ''
		));
		$this->hasColumn('app_page_title', 'string', 255, array(
			'type' => 'string',
			'length' => 255,
			'default' => ''
		));
		$this->hasColumn('app_page_sub_title', 'string', 255, array(
			'type' => 'string',
			'length' => 255,
			'default' => ''
		));
	}

	public function setUp()
	{
		parent::setUp();
		$this->hasOne('TemplateManagerTemplates as Template', array(
			'local' => 'template_id',
			'foreign' => 'template_id'));

		$this->hasMany('TemplateManagerLayoutsContainers as Containers', array(
			'local' => 'layout_id',
			'foreign' => 'layout_id',
			'orderBy' => 'sort_order',
			'cascade' => array('delete')));

		$this->hasMany('TemplateManagerLayoutsConfiguration as Configuration', array(
			'local' => 'layout_id',
			'foreign' => 'layout_id',
			'cascade' => array('delete')));

		$this->hasMany('TemplateManagerLayoutsStyles as Styles', array(
			'local' => 'layout_id',
			'foreign' => 'layout_id',
			'cascade' => array('delete')));
	}
}