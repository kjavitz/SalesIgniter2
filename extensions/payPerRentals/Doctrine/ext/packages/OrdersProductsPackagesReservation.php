<?php

/**
 * ProductsPackages
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 6401 2009-09-24 16:12:04Z guilhermeblanco $
 */
class OrdersProductsPackagesReservation extends Doctrine_Record {
	
	public function setUp(){
		$this->setUpParent();

		$this->hasOne('OrdersProductsPackages', array(
			'local'   => 'orders_products_id',
			'foreign' => 'orders_products_id'
		));

		$this->hasOne('ProductsInventoryBarcodes', array(
			'local'   => 'barcode_id',
			'foreign' => 'barcode_id'
		));

		$this->hasOne('ProductsInventoryQuantity', array(
			'local'   => 'quantity_id',
			'foreign' => 'quantity_id'
		));

	}

	public function setUpParent(){
		$OrdersProducts = Doctrine_Core::getTable('OrdersProductsPackages')->getRecordInstance();
		$ProductsInventoryBarcodes = Doctrine_Core::getTable('ProductsInventoryBarcodes')->getRecordInstance();
		$ProductsInventoryQuantity = Doctrine_Core::getTable('ProductsInventoryQuantity')->getRecordInstance();

		$OrdersProducts->hasMany('OrdersProductsPackagesReservation', array(
			'local' => 'orders_products_id',
			'foreign' => 'orders_products_id'
		));

		$ProductsInventoryBarcodes->hasMany('OrdersProductsPackagesReservation', array(
			'local'   => 'barcode_id',
			'foreign' => 'barcode_id'
		));

		$ProductsInventoryQuantity->hasMany('OrdersProductsPackagesReservation', array(
			'local'   => 'quantity_id',
			'foreign' => 'quantity_id'
		));
	}
	
    public function setTableDefinition(){
        $this->setTableName('orders_products_packages_reservation');
        $this->hasColumn('orders_products_packages_reservation_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'unsigned' => 0,
             'primary' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('orders_products_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'unsigned' => 0,
             'primary' => true,
             'autoincrement' => false,
             ));
      $this->hasColumn('start_date', 'datetime', null, array(
			'type' => 'datetime',
			'primary' => false,
			'notnull' => true,
			'autoincrement' => false,
		));
		$this->hasColumn('event_date', 'datetime', null, array(
			'type' => 'datetime',
			'primary' => false,
			'notnull' => true,
			'autoincrement' => false,
		));
		$this->hasColumn('event_name', 'string', 250, array(
			'type' => 'string',
			'length' => 250,
			'fixed' => false,
			'primary' => false,
			'notnull' => true,
			'autoincrement' => false,
		));
		$this->hasColumn('end_date', 'datetime', null, array(
			'type' => 'datetime',
			'primary' => false,
			'notnull' => true,
			'autoincrement' => false,
		));

		$this->hasColumn('insurance', 'decimal', 15, array(
			'type' => 'decimal',
			'length' => 15,
			'fixed' => true,
			'primary' => false,
			'notnull' => true,
			'default' => '0.0000',
			'autoincrement' => false,
		));
		$this->hasColumn('rental_state', 'string', 32, array(
			'type' => 'string',
			'length' => 32,
			'fixed' => false,
			'primary' => false,
			'default' => 'reserved',
			'notnull' => true,
			'autoincrement' => false,
		));
		$this->hasColumn('date_shipped', 'date', null, array(
			'type' => 'date',
			'primary' => false,
			'default' => '0000-00-00',
			'notnull' => true,
			'autoincrement' => false,
		));
		$this->hasColumn('date_returned', 'date', null, array(
			'type' => 'date',
			'primary' => false,
			'default' => '0000-00-00',
			'notnull' => true,
			'autoincrement' => false,
		));
		$this->hasColumn('broken', 'integer', 1, array(
			'type' => 'integer',
			'length' => 1,
			'unsigned' => 0,
			'primary' => false,
			'default' => '0',
			'notnull' => true,
			'autoincrement' => false,
		));
		$this->hasColumn('shipping_method', 'string', 64, array(
			'type' => 'string',
			'length' => 64,
			'fixed' => false,
			'primary' => false,
			'notnull' => true,
			'autoincrement' => false,
		));
		$this->hasColumn('shipping_method_title', 'string', 128, array(
			'type' => 'string',
			'length' => 128,
			'fixed' => false,
			'primary' => false,
			'notnull' => true,
			'autoincrement' => false,
		));
		$this->hasColumn('shipping_cost', 'decimal', 15, array(
			'type' => 'decimal',
			'length' => 15,
			'unsigned' => 0,
			'primary' => false,
			'default' => '0.0000',
			'notnull' => true,
			'autoincrement' => false,
			'scale' => false,
		));
		$this->hasColumn('shipping_days_before', 'integer', 4, array(
			'type' => 'integer',
			'length' => 4,
			'unsigned' => 0,
			'primary' => false,
			'default' => '0',
			'notnull' => true,
			'autoincrement' => false,
		));
		$this->hasColumn('shipping_days_after', 'integer', 4, array(
			'type' => 'integer',
			'length' => 4,
			'unsigned' => 0,
			'primary' => false,
			'default' => '0',
			'notnull' => true,
			'autoincrement' => false,
		));
		$this->hasColumn('quantity_id', 'integer', 4, array(
			'type' => 'integer',
			'length' => 4,
			'primary' => false,
			'notnull' => false,
			'autoincrement' => false,
		));
		$this->hasColumn('barcode_id', 'integer', 4, array(
			'type' => 'integer',
			'length' => 4,
			'primary' => false,
			'notnull' => false,
			'autoincrement' => false,
		));
		$this->hasColumn('track_method', 'string', 16, array(
			'type' => 'string',
			'length' => 16,
			'fixed' => false,
			'primary' => false,
			'default' => 'barcode',
			'notnull' => true,
			'autoincrement' => false,
		));

		$this->hasColumn('rental_status_id', 'integer', 4, array(
			'type' => 'integer',
			'length' => 4,
			'unsigned' => 0,
			'primary' => false,
			'notnull' => false,
			'autoincrement' => false,
		));

		$this->hasColumn('semester_name', 'string', 250, array(
			'type' => 'string',
			'length' => 250,
			'fixed' => false,
			'primary' => false,
			'notnull' => true,
			'autoincrement' => false,
		));

		$this->hasColumn('tracking_number', 'string', 250, array(
			'type' => 'string',
			'length' => 250,
			'fixed' => false,
			'primary' => false,
			'notnull' => true,
			'autoincrement' => false,
		));

		$this->hasColumn('tracking_type', 'string', 30, array(
			'type' => 'string',
			'length' => 30,
			'fixed' => false,
			'primary' => false,
			'notnull' => true,
			'autoincrement' => false,
		));
    }
}
?>