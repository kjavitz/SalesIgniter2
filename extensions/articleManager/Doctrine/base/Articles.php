<?php

/**
 * Articles
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 6401 2009-09-24 16:12:04Z guilhermeblanco $
 */
class Articles extends Doctrine_Record {
	
	public function setUp(){
		$this->hasMany('ArticlesDescription', array(
			'local' => 'articles_id',
			'foreign' => 'articles_id',
			'cascade' => array('delete')
		));
		
		$this->hasMany('ArticlesToTopics', array(
			'local' => 'articles_id',
			'foreign' => 'articles_id',
			'cascade' => array('delete')
		));
	}
	
	public function preInsert($event){
		$this->articles_date_added = date('y-m-d');
	}
	
	public function preSave($event){
		$this->articles_last_modified = date('y-m-d');
	}
	
	public function setTableDefinition(){
		$this->setTableName('articles');
		
		$this->hasColumn('articles_id', 'integer', 4, array(
		'type' => 'integer',
		'length' => 4,
		'unsigned' => 0,
		'primary' => true,
		'autoincrement' => true,
		));
		$this->hasColumn('articles_date_added', 'timestamp', null, array(
		'type' => 'timestamp',
		'primary' => false,
		'default' => '0000-00-00 00:00:00',
		'notnull' => true,
		'autoincrement' => false,
		));
		$this->hasColumn('articles_last_modified', 'timestamp', null, array(
		'type' => 'timestamp',
		'primary' => false,
		'notnull' => false,
		'autoincrement' => false,
		));
		$this->hasColumn('articles_date_available', 'timestamp', null, array(
		'type' => 'timestamp',
		'primary' => false,
		'notnull' => false,
		'autoincrement' => false,
		));
		$this->hasColumn('articles_status', 'integer', 1, array(
		'type' => 'integer',
		'length' => 1,
		'unsigned' => 0,
		'primary' => false,
		'default' => '0',
		'notnull' => true,
		'autoincrement' => false,
		));
	}
	
	public function getArticle($aId, $langId){
		$Qarticle = Doctrine_Query::create()
		->from('Articles a')
		->leftJoin('a.ArticlesDescription ad')
		->where('a.articles_status = ?', '1')
		->andWhere('a.articles_id = ?', $aId)
		->andWhere('ad.language_id = ?', $langId)
		->execute(array(), Doctrine_Core::HYDRATE_ARRAY);
		if ($Qarticle){
			$className = __CLASS__ . 'InfoObject';
			return new $className($Qarticle[0]);
		}
		return null;
	}
}

class ArticlesInfoObject {
	
	public function __construct($data){
		$this->data = $data;
	}
	
	public function updateViews(){
		Doctrine_Query::create()
		->update('ArticlesDescription')
		->set('articles_viewed', 'articles_viewed+1')
		->where('articles_id = ?', $this->data['articles_id'])
		->andWhere('language_id = ?', $this->data['ArticlesDescription'][0]['language_id'])
		->execute();
		return true;
	}
	
	public function getArticleName(){
		return $this->data['ArticlesDescription'][0]['articles_name'];
	}
	
	public function getArticleText(){
		return $this->data['ArticlesDescription'][0]['articles_description'];
	}
	
	public function getArticleUrl(){
		return $this->data['ArticlesDescription'][0]['articles_url'];
	}
	
	public function getArticleDateAvailable(){
		return $this->data['articles_date_available'];
	}
	
	public function getArticleDateAdded(){
		return $this->data['articles_date_added'];
	}
}