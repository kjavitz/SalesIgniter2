<?php

/**
 * OrdersStatusDescription
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 6401 2009-09-24 16:12:04Z guilhermeblanco $
 */
class OrdersStatusDescription extends Doctrine_Record {

	public function setUp(){
		parent::setUp();
		
		$this->setAttribute(Doctrine::ATTR_COLL_KEY, 'language_id');
		$this->hasOne('OrdersStatus', array(
			'local' => 'orders_status_id',
			'foreign' => 'orders_status_id'
		));
	}
	
	public function setTableDefinition(){
		$this->setTableName('orders_status_description');
		
		$this->hasColumn('orders_status_id', 'integer', 4, array(
		'type' => 'integer',
		'length' => 4,
		'unsigned' => 0,
		'primary' => false,
		'autoincrement' => false,
		));
		$this->hasColumn('language_id', 'integer', 4, array(
		'type' => 'integer',
		'length' => 4,
		'unsigned' => 0,
		'primary' => false,
		'default' => '1',
		'autoincrement' => false,
		));
		$this->hasColumn('orders_status_name', 'string', 32, array(
		'type' => 'string',
		'length' => 32,
		'fixed' => false,
		'primary' => false,
		'default' => '',
		'notnull' => true,
		'autoincrement' => false,
		));
	}
	
	public function newLanguageProcess($fromLangId, $toLangId){
		$Qdescription = Doctrine_Query::create()
		->from('OrdersStatusDescription')
		->where('language_id = ?', (int) $fromLangId)
		->execute(array(), Doctrine_Core::HYDRATE_ARRAY);
		foreach($Qdescription as $Record){
			$toTranslate = array(
				'name' => $Record['orders_status_name']
			);
			
			EventManager::notify('OrdersStatusDescriptionNewLanguageProcessBeforeTranslate', $toTranslate);
			
			$translated = sysLanguage::translateText($toTranslate, (int) $toLangId, (int) $fromLangId);
			
			$newDesc = new OrdersStatusDescription();
			$newDesc->orders_status_id = $Record['orders_status_id'];
			$newDesc->language_id = (int) $toLangId;
			$newDesc->orders_status_name = $translated['name'];
			
			EventManager::notify('OrdersStatusDescriptionNewLanguageProcessBeforeSave', $newDesc);
			
			$newDesc->save();
		}
	}

	public function deleteLanguageProcess($langId){
		Doctrine_Query::create()
		->delete('OrdersStatusDescription')
		->where('language_id = ?', (int) $langId)
		->execute();
	}
}