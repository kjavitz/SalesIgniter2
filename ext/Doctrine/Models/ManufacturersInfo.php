<?php

/**
 * ManufacturersInfo
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 6401 2009-09-24 16:12:04Z guilhermeblanco $
 */
class ManufacturersInfo extends Doctrine_Record {
	
	public function setUp(){
		$this->setUpParent();
		$this->setAttribute(Doctrine_Core::ATTR_COLL_KEY, 'languages_id');
	}
	
	public function setUpParent(){
	}
	
	public function setTableDefinition(){
		$this->setTableName('manufacturers_info');
		
		$this->hasColumn('manufacturers_id', 'integer', 4, array(
			'type' => 'integer',
			'length' => 4,
			'unsigned' => 0,
			'primary' => false,
			'autoincrement' => false,
		));
		
		$this->hasColumn('languages_id', 'integer', 4, array(
			'type' => 'integer',
			'length' => 4,
			'unsigned' => 0,
			'primary' => false,
			'autoincrement' => false,
		));
		
		$this->hasColumn('manufacturers_url', 'string', 255, array(
			'type' => 'string',
			'length' => 255,
			'fixed' => false,
			'primary' => false,
			'default' => '',
			'notnull' => true,
			'autoincrement' => false,
		));
		
		$this->hasColumn('url_clicked', 'integer', 4, array(
			'type' => 'integer',
			'length' => 4,
			'unsigned' => 0,
			'primary' => false,
			'default' => '0',
			'notnull' => true,
			'autoincrement' => false,
		));
		
		$this->hasColumn('date_last_click', 'timestamp', null, array(
			'type' => 'timestamp',
			'primary' => false,
			'notnull' => false,
			'autoincrement' => false,
		));
		
		$this->hasColumn('manufacturers_htc_title_tag', 'string', 80, array(
			'type' => 'string',
			'length' => 80,
			'fixed' => false,
			'primary' => false,
			'notnull' => false,
			'autoincrement' => false,
		));
		
		$this->hasColumn('manufacturers_htc_desc_tag', 'string', null, array(
			'type' => 'string',
			'fixed' => false,
			'primary' => false,
			'notnull' => false,
			'autoincrement' => false,
		));
		
		$this->hasColumn('manufacturers_htc_keywords_tag', 'string', null, array(
			'type' => 'string',
			'fixed' => false,
			'primary' => false,
			'notnull' => false,
			'autoincrement' => false,
		));
		
		$this->hasColumn('manufacturers_htc_description', 'string', null, array(
			'type' => 'string',
			'fixed' => false,
			'primary' => false,
			'notnull' => false,
			'autoincrement' => false,
		));
	}
	
	public function newLanguageProcess($fromLangId, $toLangId){
		$Qdescription = Doctrine_Query::create()
		->from('ManufacturersInfo')
		->where('languages_id = ?', (int) $fromLangId)
		->execute(array(), Doctrine_Core::HYDRATE_ARRAY);
		foreach($Qdescription as $Record){
			$toTranslate = array(
				'htc_title_tag'    => $Record['manufacturers_htc_title_tag'],
				'htc_desc_tag'     => $Record['manufacturers_htc_desc_tag'],
				'htc_keywords_tag' => $Record['manufacturers_htc_keywords_tag'],
				'htc_description'  => $Record['manufacturers_htc_description'],
			);
			
			EventManager::notify('ManufacturersInfoNewLanguageProcessBeforeTranslate', $toTranslate);

			$translated = sysLanguage::translateText($toTranslate, (int) $toLangId, (int) $fromLangId);
			
			$newDesc = new ManufacturersInfo();
			$newDesc->manufacturers_id = $Record['manufacturers_id'];
			$newDesc->languages_id = (int) $toLangId;
			$newDesc->date_last_click = null;
			$newDesc->manufacturers_url = $Record['manufacturers_url'];
			$newDesc->url_clicked = 0;
			$newDesc->manufacturers_htc_title_tag = $translated['htc_title_tag'];
			$newDesc->manufacturers_htc_desc_tag = $translated['htc_desc_tag'];
			$newDesc->manufacturers_htc_keywords_tag = $translated['htc_keywords_tag'];
			$newDesc->manufacturers_htc_description = $translated['htc_description'];
			
			EventManager::notify('ManufacturersInfoNewLanguageProcessBeforeSave', $newDesc);
			
			$newDesc->save();
		}
	}

	public function deleteLanguageProcess($langId){
		Doctrine_Query::create()
		->delete('ManufacturersInfo')
		->where('languages_id = ?', (int) $langId)
		->execute();
	}
}